# -*- coding: utf-8 -*-
"""lab3_creditcard_soln

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y1SNX1nArPfGX3P3U1pBLHpCwSnSGLBy
"""

"""
MAIN SCRIPT TO RUN THIS PROGRAM - This is the START of the test script. Note this code is Commented out for visualization purposes only. 

import random

from datetime import date

#import your CreditCard Class
from lab3_creditcard_soln import CreditCard

products = [‘Aztex Coin Medallion Necklace’, ‘Pirate Life Graphic T-shirt’, ‘Treasure Map Tapestry’]

customers = [‘Jack Sparrow’, ‘Frederick Barbossa’, ‘Will Turner’]

for x, prod in enumerate(products):

        print('\n ----------------------')

        print("Welcome Data Analytics Store!!!")

        print("Order Placed: " + date.today().strftime('%B %d, %Y'))

        print("Tortuga Pirate Shop Order Number: " + str(random.randint(500, 5000)))

        price = random.randrange(1, 100)

        print("Order Total: ${:.2f}".format(price))

        #formula to generate the credit card number
        cardnum = str(random.randint(1000, 9999)) + " " + str(x) + str(random.randint(100, 999)) + " " + str(random.randint(1000, 9999)) + " "          + str(random.randint(1000, 9999))
 
        #creating an object of CreditCard Class
        ccard = CreditCard(cardnum, customers[x], '10/25')
        if ccard.processOrder(price):
            print('Order successfully processed.')

            print('Thank you, {} for the ordering {}. Your {} credit card will be charged for ${:.2f}.'.format(ccard.get_cardOwner(), prod, ccard.get_cardType(), price))

        elif ccard.get_cardType() == 'Not Supported Card Type':
            print('Your {} credit card is not accepted by the store. Please provide a different type of credit card.'.format(ccard.get_cardType()))
        else:
            print('Your credit card did not have sufficient amount. Order was not successfully processed.')

        print('\n --- Credit Card Information ----\n')
        print(ccard)
        
 MAIN SCRIPT TO RUN THIS PROGRAM - This is the END of the test script. Note this code is Commented out for visualization purposes only. 

"""


import random


class CreditCard:
#constructor
  def __init__(self, cardnum, userName, exDate):
    self.cardnum = cardnum
    self.userName = userName
    self.exDate = exDate
    self.creditLimit = 1000
    self.cardBalance = random.randint(0, 999)
    self.cardType = {1: 'Visa', 2: 'Master', 3: 'Amex', 4: 'Discover'}
#getters and setters  
  def set_cardOwner(self, userName):
    self.userName = userName
  
  def get_cardOwner(self):
    return self.userName
  
  def get_cardType(self):
    if int(self.cardnum[5]) not in self.cardType:
     return 'Not Supported Card Type'
    if int(self.cardnum[5]) in self.cardType:
      return self.cardType
    
     
    
#returns false when invalid card type or card balance is exceeded
#returns true when card balance is successfuly processed
  def processOrder(self, amount):
    if self.cardBalance < amount or int(self.cardnum[5]) not in self.cardType:
      return False
    self.cardBalance -= amount
    return True
#used to print a string of card number, peroname, and exDate when specifically called
#returns a card num, userName, or exDate per project requirements.
  def __str__(self):
    return 'Credit Card Number: {}, Person name: {}, Expiry Date: {}'.format(self.cardnum, self.userName, self.exDate)
